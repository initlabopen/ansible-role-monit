
# file: monit/tasks/main.yml
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- include: debian.yml
  when: ansible_os_family == "Debian"

- include: redhat.yml
  when: ansible_os_family == "RedHat"


- name: create includes folder
  file: path={{ monit_includes }} state=directory mode=0600

- name: config - Setup monitrc
  template:
    src: etc/monit/monitrc.j2
    dest: "{{monitrc_conf}}"
    owner: root
    group: root
    mode: 0700
  notify: restart monit

- name: monitors - Create facts directory
  file:
    path: "/etc/ansible/facts.d"
    mode: 0755
    state: directory

- name: monitors - Registers configured monitors
  template:
    src: "monit.fact.j2"
    dest: "/etc/ansible/facts.d/monit.fact"
    mode: 0644
  register: monit_write_facts

- name: monitors - Reload facts
  setup:
    filter: "ansible_local"
  when: monit_write_facts.changed

- name: Check if php-fpm is running
  shell: ps aux | grep php-fpm | grep -v grep
  ignore_errors: yes
  changed_when: false
  register: service_phpfpm_status

- name: Check if apache is running
  shell: ps aux | grep -e apache -e httpd | grep -v grep
  ignore_errors: yes
  changed_when: false
  register: service_apache_status

- name: Check if nginx is running
  shell: ps aux | grep nginx | grep -v grep
  ignore_errors: yes
  changed_when: false
  register: service_nginx_status

- name: monitors - Write monitors
  template:
    src: etc/monit/conf.d/monitor.j2
    dest: "{{ monit_includes }}/{{ item.name }}"
    owner: root
    group: root
  with_items: "{{ monit_services }}"
  notify: restart monit

- name: monitors - List configured monitors
  command: ls -1 {{ monit_includes }}
  register: monit_services_present
  changed_when: false

- name: monitors - Remove unused monitors
  file:
    path: "{{ monit_includes }}/{{ item }}"
    state: absent
  with_items: "{{ monit_services_present.stdout_lines }}"
  when: monit_service_delete_unlisted and item|basename not in ansible_local.monit.monit_configured_services
  notify: restart monit

- name: create monitoring folder
  file: path=/root/bin/hr/ state=directory mode=0755

- name: create monitoring log
  file: path=/var/log/highload-report/ state=directory mode=0755

- name: Copy monitoring script
  template:
    src: highload-report.sh.j2
    dest: "/root/bin/hr/highload-report.sh"
    owner: root
    group: root
    mode: 0755

- name: Copy script alert about change passwd
  action: copy src=../files/change_passwd_root.sh dest=/root/bin/hr/change_passwd_root.sh owner=root group=root mode="744"

- name: Copy address
  template:
    src: .address.j2
    dest: "/root/bin/hr/.address"
    owner: root
    group: root
    mode: 0600

- name: Copy mysql user
  template:
    src: .mysqlu.j2
    dest: "/root/bin/hr/.mysqlu"
    owner: root
    group: root
    mode: 0600

- name: Copy mysql password
  template:
    src: .mysqlp.j2
    dest: "/root/bin/hr/.mysqlp"
    owner: root
    group: root
    mode: 0600

- name: Test script change_passwd_root.sh check
  shell: bash /root/bin/hr/change_passwd_root.sh
  ignore_errors: yes


- name: Test script highload-report.sh check
  shell: bash /root/bin/hr/highload-report.sh test
  ignore_errors: yes

# - name: Restart monit
#   service:
#     name: 'monit'
#     state: 'restarted'
