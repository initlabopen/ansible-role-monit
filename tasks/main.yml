
# file: monit/tasks/main.yml

- name: pkg - Install package
  apt:
    name: {{ item }}
    update_cache: yes
    cache_valid_time: 3600
    state: present
  with_item: "{{ monit_pkg }}"
  
- name: create includes folder
  file: path={{ monit_includes }} state=directory mode=0600

- name: config - Setup monitrc
  template:
    src: etc/monit/monitrc.j2
    dest: "{{monitrc_conf}}"
    owner: root
    group: root
    mode: 0700
  notify: restart monit

- name: Check if php-fpm is running
  shell: ps aux | grep php-fpm | grep -v grep
  ignore_errors: yes
  changed_when: false
  register: service_phpfpm_status

- name: Report status of Phpfpm
  fail:
    msg: |
      Service phpfpm is not running.
      Return code from `grep`:
      {{ service_phpfpm_status.rc }}
  when: service_phpfpm_status.rc != 0

- name: Check if nginx is running
  shell: ps aux | grep nginx | grep -v grep
  ignore_errors: yes
  changed_when: false
  register: service_nginx_status

- name: Report status of nginx
  fail:
    msg: |
      Service nginx is not running.
      Return code from `grep`:
      {{ service_nginx_status.rc }}
  when: service_nginx_status.rc != 0

- name: monitors - Write monitors
  template:
    src: etc/monit/conf.d/monitor.j2
    dest: "{{ monit_includes }}/{{ item.name }}"
    owner: root
    group: root
  with_items: "{{ monit_services }}"
  notify: restart monit

- name: monitors - List configured monitors
  command: ls -1 {{ monit_includes }}
  register: monit_services_present
  changed_when: false

- name: monitors - Remove unused monitors
  file:
    path: "{{ monit_includes }}/{{ item }}"
    state: absent
  with_items: monit_services_present.stdout_lines
  when: monit_service_delete_unlisted and item|basename not in ansible_local.monit.monit_configured_services
  notify: restart monit


- name: Copy monitoring script
  copy: src=highload-report.sh dest=/root/bin/hr/ owner=root mode=755
